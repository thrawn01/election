// Code generated by protoc-gen-go. DO NOT EDIT.
// source: structs.proto

/*
Package election is a generated protocol buffer package.

It is generated from these files:
	structs.proto

It has these top-level messages:
	ResetElectionReq
	ResetElectionResp
	ResignReq
	ResignResp
	HeartBeatReq
	HeartBeatResp
	VoteResp
	VoteReq
*/
package election

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Resets the current state of a node to 'candidate'
type ResetElectionReq struct {
}

func (m *ResetElectionReq) Reset()                    { *m = ResetElectionReq{} }
func (m *ResetElectionReq) String() string            { return proto.CompactTextString(m) }
func (*ResetElectionReq) ProtoMessage()               {}
func (*ResetElectionReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResetElectionResp struct {
}

func (m *ResetElectionResp) Reset()                    { *m = ResetElectionResp{} }
func (m *ResetElectionResp) String() string            { return proto.CompactTextString(m) }
func (*ResetElectionResp) ProtoMessage()               {}
func (*ResetElectionResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Asks the node to resign as leader
type ResignReq struct {
}

func (m *ResignReq) Reset()                    { *m = ResignReq{} }
func (m *ResignReq) String() string            { return proto.CompactTextString(m) }
func (*ResignReq) ProtoMessage()               {}
func (*ResignReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ResignResp struct {
	// True if the receiver is leader and stepped down
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *ResignResp) Reset()                    { *m = ResignResp{} }
func (m *ResignResp) String() string            { return proto.CompactTextString(m) }
func (*ResignResp) ProtoMessage()               {}
func (*ResignResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResignResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Sent by the leader of the election to all followers
type HeartBeatReq struct {
	// The leader this heart beat is from
	From string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	// The current term of the leader
	Term uint64 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
}

func (m *HeartBeatReq) Reset()                    { *m = HeartBeatReq{} }
func (m *HeartBeatReq) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatReq) ProtoMessage()               {}
func (*HeartBeatReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HeartBeatReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *HeartBeatReq) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

// Response to a heart beat request
type HeartBeatResp struct {
	// The follower who is responding
	From string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	// The term the heart beat is for
	Term uint64 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
}

func (m *HeartBeatResp) Reset()                    { *m = HeartBeatResp{} }
func (m *HeartBeatResp) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatResp) ProtoMessage()               {}
func (*HeartBeatResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *HeartBeatResp) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *HeartBeatResp) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

type VoteResp struct {
	// The candidate who responded
	Candidate string `protobuf:"bytes,1,opt,name=candidate" json:"candidate,omitempty"`
	// The term this vote response is for
	Term uint64 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	// If the Vote was granted by this node
	Granted bool `protobuf:"varint,3,opt,name=granted" json:"granted,omitempty"`
}

func (m *VoteResp) Reset()                    { *m = VoteResp{} }
func (m *VoteResp) String() string            { return proto.CompactTextString(m) }
func (*VoteResp) ProtoMessage()               {}
func (*VoteResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *VoteResp) GetCandidate() string {
	if m != nil {
		return m.Candidate
	}
	return ""
}

func (m *VoteResp) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteResp) GetGranted() bool {
	if m != nil {
		return m.Granted
	}
	return false
}

// A vote request sent to all peers at
// the start of an election.
type VoteReq struct {
	// The candidate who is requesting the targets vote
	Candidate string `protobuf:"bytes,1,opt,name=candidate" json:"candidate,omitempty"`
	// The term this vote is for.
	Term uint64 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
}

func (m *VoteReq) Reset()                    { *m = VoteReq{} }
func (m *VoteReq) String() string            { return proto.CompactTextString(m) }
func (*VoteReq) ProtoMessage()               {}
func (*VoteReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *VoteReq) GetCandidate() string {
	if m != nil {
		return m.Candidate
	}
	return ""
}

func (m *VoteReq) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func init() {
	proto.RegisterType((*ResetElectionReq)(nil), "ResetElectionReq")
	proto.RegisterType((*ResetElectionResp)(nil), "ResetElectionResp")
	proto.RegisterType((*ResignReq)(nil), "ResignReq")
	proto.RegisterType((*ResignResp)(nil), "ResignResp")
	proto.RegisterType((*HeartBeatReq)(nil), "HeartBeatReq")
	proto.RegisterType((*HeartBeatResp)(nil), "HeartBeatResp")
	proto.RegisterType((*VoteResp)(nil), "VoteResp")
	proto.RegisterType((*VoteReq)(nil), "VoteReq")
}

func init() { proto.RegisterFile("structs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x31, 0x4b, 0xc0, 0x30,
	0x10, 0x85, 0xa9, 0x16, 0xdb, 0x9e, 0x16, 0x34, 0x2e, 0x19, 0x1c, 0x4a, 0x06, 0xe9, 0xe4, 0x22,
	0xe8, 0xe0, 0x56, 0x10, 0x9c, 0x33, 0x74, 0x70, 0x8b, 0xe9, 0x59, 0x0a, 0xb6, 0x49, 0x73, 0xd7,
	0xff, 0x2f, 0x4d, 0x5b, 0x14, 0x71, 0xd0, 0xed, 0xde, 0xe3, 0xbe, 0x07, 0xef, 0x41, 0x49, 0x1c,
	0x16, 0xcb, 0x74, 0xe7, 0x83, 0x63, 0xa7, 0x04, 0x5c, 0x6a, 0x24, 0xe4, 0xe7, 0x0f, 0xb4, 0x3c,
	0xb8, 0x49, 0xe3, 0xac, 0xae, 0xe1, 0xea, 0x87, 0x47, 0x5e, 0x9d, 0x43, 0xa1, 0x91, 0x86, 0x3e,
	0x7e, 0xdc, 0x02, 0x1c, 0x82, 0xbc, 0x90, 0x90, 0xd1, 0x62, 0x2d, 0x12, 0xc9, 0xa4, 0x4a, 0xea,
	0x5c, 0x1f, 0x52, 0x3d, 0xc0, 0xc5, 0x0b, 0x9a, 0xc0, 0x0d, 0x1a, 0xd6, 0x38, 0x0b, 0x01, 0xe9,
	0x7b, 0x70, 0x63, 0x7c, 0x2b, 0x74, 0xbc, 0x57, 0x8f, 0x31, 0x8c, 0xf2, 0xa4, 0x4a, 0xea, 0x54,
	0xc7, 0x5b, 0x3d, 0x42, 0xf9, 0x8d, 0x23, 0xff, 0x67, 0xb0, 0x85, 0xbc, 0x75, 0x8c, 0x91, 0xb9,
	0x81, 0xc2, 0x9a, 0xa9, 0x1b, 0x3a, 0xc3, 0xb8, 0x83, 0x5f, 0xc6, 0x6f, 0xf4, 0x5a, 0xa4, 0x0f,
	0x66, 0x62, 0xec, 0xe4, 0xe9, 0x56, 0x64, 0x97, 0xea, 0x09, 0xb2, 0x2d, 0x77, 0xfe, 0x7f, 0x6c,
	0x03, 0xaf, 0x39, 0xee, 0x53, 0xbe, 0x9d, 0xc5, 0xd9, 0xef, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xe1, 0x04, 0x54, 0x6d, 0x87, 0x01, 0x00, 0x00,
}
